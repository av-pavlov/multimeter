СЮДА ВПИШИТЕ СВОЮ ФАМИЛИЮ!
Установка системы:
1. Распаковать дистрибутив Multimeter

2. Подготовить каталог соревнования (по умолчанию work):
2.1. Убедиться, что в каталоге соревнования есть подкаталоги задач (имя каталога должно совпадать с "код задачи" в веб-интерфейсе) 
     и в каждом из них есть:
     - каталог solutions
     - каталог tests (с тестами и эталонными ответами)
     - утилита проверки решений (check.exe, убедитесь, что она работает)
2.2. Убедиться, что в каталоге соревнования в папке .languages есть bat-файлы для запуска необходимых компиляторов и они работают
     При изменении списка нужно отредактировать languages.json.

3. Запустить систему:
3.1 Перейти в каталог, куда распакован дистрибутив Multimeter
3.2 Запустить арбитр
   - открыть командную строку и запустить arbiter.py с помощью интерпретатора Python: python\python.exe arbiter.py
   - каталог соревнования указывается с помощью параметра -w, например: python\python.exe arbiter.py -w contest
3.3. Запустить веб-сервер
   - открыть командную строку и запустить server.py с помощью интерпретатора Python: python\python.exe server.py
   - порт веб-сервера указывается с помощью параметра -p (по умолчанию, 80), например: python\python.exe server.py -p 8000
   - каталог соревнования указывается с помощью параметра -w, например: python\python.exe server.py -w contest

4. Пользователи могут зарегистрироваться самостоятельно либо их можно создать через интерфейс администратора, и сохраняются в users.json.

5. Вход в интерфейс администратора: http://localhost/admin/ (пароль по умолчанию: password, можно изменить в settings.json)

6. На проверяющей системе надо запустить файл "disable runtime errors.reg", ответить утвердительно на все запросы Windows. Это скроет окошки, которые
   возникают при ошибках времени выполнения (например, деление на ноль). Без этого шага вам придется закрывать окна с сообщениями об ошибке программы 
   вручную, что будет восприниматься проверяющей системой как TimeLimit вместо RuntimeError.
